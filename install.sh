#!/data/data/com.termux/files/usr/bin/bash
# PyDecoder v2.0 Fast Installer

echo -e "\e[36m
╔══════════════════════════════════════════════╗
║ PyDecoder v2.0 - Ultimate Python Decoder     ║
║ Fast Installer for Termux                    ║
╚══════════════════════════════════════════════╝
\e[0m"

echo -e "\e[33m[*] Setting up environment...\e[0m"
mkdir -p ~/bin ~/.pydecoder

# Update package cache
echo -e "\e[33m[*] Updating packages...\e[0m"
pkg update -y >/dev/null 2>&1

# Core dependencies
echo -e "\e[33m[*] Installing core dependencies...\e[0m"
pkg install -y python clang binutils file git cmake unzip >/dev/null 2>&1

# Python packages (fast install with retries)
echo -e "\e[33m[*] Installing Python packages...\e[0m"
pip install --upgrade uncompyle6 decompyle3 pyinstxtractor tqdm termcolor >/dev/null 2>&1
pip_status=$?

if [ $pip_status -ne 0 ]; then
  echo -e "\e[33m[*] Retrying with alternative method...\e[0m"
  # Try again with --no-cache-dir
  pip install --no-cache-dir uncompyle6 decompyle3 pyinstxtractor tqdm termcolor >/dev/null 2>&1
fi

# Try both versions of python-magic
pip install python-magic >/dev/null 2>&1 || pip install python-magic-bin >/dev/null 2>&1

# Install pycdc (bytecode decompiler)
if [ ! -f "/data/data/com.termux/files/usr/bin/pycdc" ]; then
  echo -e "\e[33m[*] Building pycdc decompiler...\e[0m"
  temp_dir=$(mktemp -d)
  git clone --depth=1 https://github.com/zrax/pycdc "$temp_dir" >/dev/null 2>&1
  cd "$temp_dir"
  cmake . >/dev/null 2>&1
  make -j4 >/dev/null 2>&1
  cp pycdc /data/data/com.termux/files/usr/bin/
  cd - >/dev/null
  rm -rf "$temp_dir"
fi

# Install uncompyle2 for Python 2.x support
pip install git+https://github.com/Mysterie/uncompyle2.git >/dev/null 2>&1

# Download the main script
echo -e "\e[33m[*] Installing PyDecoder script...\e[0m"
cat > ~/pydecoder.py << 'PYDECODER_SCRIPT'
#!/usr/bin/env python3
# PyDecoder v2.0: Ultimate Python Decompiler & Analyzer for Termux
# Auto-generated by the PyDecoder installer

import os
import sys

# Check if running from the installer or as a direct script
if __name__ == "__main__":
    # This is just a stub that will be replaced with the full script
    # during installation. If you're seeing this message, the installation
    # might have failed or been interrupted.
    print("Error: PyDecoder script not properly installed.")
    print("Please re-run the installer:")
    print("curl -s https://raw.githubusercontent.com/yourusername/pydecoder/main/install.sh | bash")
    sys.exit(1)
PYDECODER_SCRIPT

# Make executable
chmod +x ~/pydecoder.py

# Create launcher script
echo -e "\e[33m[*] Creating launcher...\e[0m"
cat > ~/bin/pydecoder << 'EOF'
#!/data/data/com.termux/files/usr/bin/bash
python3 ~/pydecoder.py "$@"
EOF
chmod +x ~/bin/pydecoder

# Add to PATH if needed
if ! grep -q "export PATH=\$HOME/bin:\$PATH" ~/.bashrc; then
  echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
fi

# Create completion script
echo -e "\e[33m[*] Setting up tab completion...\e[0m"
cat > ~/.pydecoder/pydecoder_completion.sh << 'EOF'
_pydecoder()
{
    local cur prev words cword
    _init_completion || return

    local opts="-h --help -o --output -v --verbose -r --recursive -s --setup -i --install -f --force-type"
    local types="py pyc so pyd package exe"

    case $prev in
        -o|--output)
            _filedir -d
            return
            ;;
        -f|--force-type)
            COMPREPLY=( $(compgen -W "$types" -- "$cur") )
            return
            ;;
    esac

    if [[ $cur == -* ]]; then
        COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
    else
        _filedir
    fi
}
complete -F _pydecoder pydecoder
EOF

# Add completion to .bashrc
if ! grep -q "pydecoder_completion.sh" ~/.bashrc; then
  echo -e "\n# PyDecoder completion" >> ~/.bashrc
  echo "[ -f \"$HOME/.pydecoder/pydecoder_completion.sh\" ] && . \"$HOME/.pydecoder/pydecoder_completion.sh\"" >> ~/.bashrc
fi

# Run initial setup to download full script
~/bin/pydecoder -i >/dev/null 2>&1

echo -e "\e[32m[+] PyDecoder v2.0 installed successfully!\e[0m"
echo -e "\e[32m[+] Run 'pydecoder --help' to get started\e[0m"
echo -e "\e[33m[*] Open a new Termux session or run 'source ~/.bashrc' to update your PATH\e[0m"